---
layout: post
title:  "Layout"
date:   2022-07-12
categories: Kotlin 
---

## Layout


Layout(レイアウト)とは, さまざまな要素を配置することができるカンバスと話せます。
<br>
<br>

## LinearLayout

LinearLayoutとは、 **横**或いは**縦**方向に一列するとき使います。<br>Viewの位置を指定せず自動的に羅列します。<br><br>![](images/LinearLayout.png)
<br>
<br>

## RelativeLayout


RelativeLayoutとは、特定基準パーツを決め<br>それとの相対的な関係を決めて配置します。
<br>
<br>

![](images/RelativeLayout.png)

## TableLayout

TableLayoutとは、テーブルみたいに横方向に羅列する行と縦方向に羅列する列の構造になっています。<br>
文書で表を作成する過程みたいに位置を決めて使います。

![](images/TableLayout.png)

<br>

## FrameLayout

FrameLayoutとは、子(レイアウト)と追加された色んなウィジェット(Widget)たちを重畳し全面に表示するとき使うレイアウトです、色んなビューたちを重ねって配置する特徴がビューを重ねず順繰りに画面に配置するLinearLayoutと差があります。
<br>

![](images/FrameLayout.png)
<br>

## ConstraintLayout

ConstraintLayoutとは、制約型レイアウトと正義しパツとパツの条件を掛ける関係型(RelativeLayout)と同一する誠実を持っています。




![](images/ConstraintLayout.png)


